# --------------------------------------------------
# ENCRYPTED BY B14CK-KN1GH7 (NAFIS FUAD)
# Github   : http://github.com/nfs-tech-bd
# Facebook : http://facebook.com/nafis.fuad.904
# Telegram : http://t.me/Nafisfuad1
# --------------------------------------------------
NFS=$(mktemp)
base64 -d  >${NFS}<<B14CK-KN1GH7
IyEvYmluL3NoCkJJQmx1ZT0nXDAzM1sxOzk0bScgICAgICAgIyBCbHVlCk5DPSdcZVswbScKV0g9J1wwMzNbMTszN20nClJFUE89Imh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9KZXJyeVNCRy9TQkcvbWFpbi8iCmNkCmNsZWFyCnNsb3dzYmcoKSB7CmNsZWFyICAKZWNobyAtZSAiJEJJQmx1ZeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIkQklCbHVl4pSCJE5DICAgICAgICAgXGVbMTszMm1Db25maWd1cmFyIERvbWluaW8gU2xvd0ROUyAgICAgICAgJEJJQmx1ZeKUgiR7TkN9IiAgCmVjaG8gLWUgIiRCSUJsdWXilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZWNobyAtZSAiJEJJQmx1ZeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IiAKZWNobyAtZSAiJEJJQmx1ZeKUgiAgWyAxIF0gIFxlWzE7MzJtUHJvcGlvIERvbWluaW8gU2xvd0ROUyAgICAgICAgICAgICAgICAke05DfSIgIAplY2hvIC1lICIkQklCbHVl4pSCICBbIDIgXSAgXGVbMTszMm1Eb21pbmlvIEFsZXRvcmlvIEZyZWUgICAgICAgICAgICAgICAgICR7TkN9IiAKZWNobyAtZSAiJEJJQmx1ZeKUgiAgWyAzIF0gIFxlWzE7MzJtRG9taW5pbyBBbGV0b3JpbyBCeSBKRVJSWS1TQkcgICAgICAgICAgICAgJHtOQ30iICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKZWNobyAtZSAiJEJJQmx1ZeKVsOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVryR7TkN9Igp1bnRpbCBbWyAkc2xvdyA9fiBeWzEtM10rJCBdXTsgZG8gCnJlYWQgLXAgIiAgIFBvciBGYXZvciBTZWxlY2Npb25hIGRlbCAxIGFsIDMgOiAiIHNsb3cKZG9uZQoKaWYgW1sgJHNsb3cgPT0gIjEiIF1dOyB0aGVuCiNpbnN0YWxsIHNsb3dkbnMKc3VkbyBhcHQgaW5zdGFsbCBzcXVpZCAteQojc2V0dGluZyBJUHRhYmxlcwppcHRhYmxlcyAtSSBJTlBVVCAtcCB1ZHAgLS1kcG9ydCA1MzAwIC1qIEFDQ0VQVAppcHRhYmxlcyAtdCBuYXQgLUkgUFJFUk9VVElORyAtcCB1ZHAgLS1kcG9ydCA1MyAtaiBSRURJUkVDVCAtLXRvLXBvcnRzIDUzMDAKbmV0ZmlsdGVyLXBlcnNpc3RlbnQgc2F2ZQpuZXRmaWx0ZXItcGVyc2lzdGVudCByZWxvYWQKCiNkZWxldGUgZGlyZWN0b3J5CnJtIC1yZiAvZXRjL3hyYXkvZG5zCnJtIGRucwoKI2lucHV0IG5hbWVzZXJ2ZXIgbWFudWFsIHRvIGNsb3VkZmxhcmUKY2xlYXIKZWNobyAtZSAiJEJJQmx1ZeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIkQklCbHVl4pSCJE5DICAgICAgICAgICAgICAgXGVbMTszMm1ET01JTklPIFNMT1dETlMgICAgICAgICAgICAgJEJJQmx1ZeKUgiR7TkN9IiAgCmVjaG8gLWUgIiRCSUJsdWXilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKZWNobyAtZSAiJEJJQmx1ZeKVreKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVriR7TkN9IgplY2hvIC1lICIkQklCbHVl4pSCJE5DICBcZVsxOzMybURlYmVzIGRlIHRlbmVyIFlhIENvbmZpZ3VyYWRvIHR1IERvbWluaW8gJEJJQmx1ZeKUgiR7TkN9IiAgCmVjaG8gLWUgIiRCSUJsdWXilbDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDila8ke05DfSIKcmVhZCAtcnAgIkludHJvZHVjZSBUdSBEb21pbmlvIE5TIDogIiAtZSBzdWIKU1VCX0RPTUFJTj0ke3N1Yn0KTlNfRE9NQUlOPSR7U1VCX0RPTUFJTn0KZWNobyAkTlNfRE9NQUlOID4gL2V0Yy94cmF5L2RucwoKbmFtZXNlcnZlcj0kKGNhdCAvZXRjL3hyYXkvZG5zKQphcHQgdXBkYXRlIC15CmFwdCBpbnN0YWxsIC15IHB5dGhvbjMgcHl0aG9uMy1kbnNsaWIgbmV0LXRvb2xzCmFwdCBpbnN0YWxsIG5jdXJzZXMtdXRpbHMgLXkKYXB0IGluc3RhbGwgZG5zdXRpbHMgLXkKI2FwdCBpbnN0YWxsIGdvbGFuZyAteQphcHQgaW5zdGFsbCBnaXQgLXkKYXB0IGluc3RhbGwgY3VybCAteQphcHQgaW5zdGFsbCB3Z2V0IC15CmFwdCBpbnN0YWxsIG5jdXJzZXMtdXRpbHMgLXkKYXB0IGluc3RhbGwgc2NyZWVuIC15CmFwdCBpbnN0YWxsIGNyb24gLXkKYXB0IGluc3RhbGwgaXB0YWJsZXMgLXkKYXB0IGluc3RhbGwgLXkgZ2l0IHNjcmVlbiB3aG9pcyBkcm9wYmVhciB3Z2V0CiNhcHQgaW5zdGFsbCAteSBwd2dlbiBweXRob24gcGhwIGpxIGN1cmwKYXB0IGluc3RhbGwgLXkgc3VkbyBnbnV0bHMtYmluCiNhcHQgaW5zdGFsbCAteSBtbG9jYXRlIGRoLW1ha2UgbGliYXVkaXQtZGV2IGJ1aWxkLWVzc2VudGlhbAphcHQgaW5zdGFsbCAteSBkb3MydW5peCBkZWJjb25mLXV0aWxzCnNlcnZpY2UgY3JvbiByZWxvYWQKc2VydmljZSBjcm9uIHJlc3RhcnQKCiNrb25maWd1cmFzaSBzbG93ZG5zCnJtIC1yZiAvZXRjL3Nsb3dkbnMKbWtkaXIgLW0gNzc3IC9ldGMvc2xvd2Rucwp3Z2V0IC1xIC1PIC9ldGMvc2xvd2Rucy9zZXJ2ZXIua2V5ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vc2xvd2Rucy9zZXJ2ZXIua2V5Igp3Z2V0IC1xIC1PIC9ldGMvc2xvd2Rucy9zZXJ2ZXIucHViICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vc2xvd2Rucy9zZXJ2ZXIucHViIgp3Z2V0IC1xIC1PIC9ldGMvc2xvd2Rucy9kbnN0dC1zZXJ2ZXIgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9KZXJyeVNCRy9TQkcvbWFpbi9zbG93ZG5zL2Ruc3R0LXNlcnZlciIKd2dldCAtcSAtTyAvZXRjL3Nsb3dkbnMvZG5zdHQtY2xpZW50ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSmVycnlTQkcvU0JHL21haW4vc2xvd2Rucy9kbnN0dC1jbGllbnQiCmNkCmNobW9kICt4IC9ldGMvc2xvd2Rucy9zZXJ2ZXIua2V5CmNobW9kICt4IC9ldGMvc2xvd2Rucy9zZXJ2ZXIucHViCmNobW9kICt4IC9ldGMvc2xvd2Rucy9kbnN0dC1zZXJ2ZXIKY2htb2QgK3ggL2V0Yy9zbG93ZG5zL2Ruc3R0LWNsaWVudAoKY2QKI2luc3RhbGwgY2xpZW50LnNlcnZpY2UKY2F0ID4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS9jbGllbnQuc2VydmljZSA8PCBFTkQKW1VuaXRdCkRlc2NyaXB0aW9uPUNsaWVudCBTbG93RE5TIEJ5IEhpZGVTU0gKRG9jdW1lbnRhdGlvbj1odHRwczovL2hpZGVzc2guY29tCkFmdGVyPW5ldHdvcmsudGFyZ2V0IG5zcy1sb29rdXAudGFyZ2V0CgpbU2VydmljZV0KVHlwZT1zaW1wbGUKVXNlcj1yb290CkNhcGFiaWxpdHlCb3VuZGluZ1NldD1DQVBfTkVUX0FETUlOIENBUF9ORVRfQklORF9TRVJWSUNFCkFtYmllbnRDYXBhYmlsaXRpZXM9Q0FQX05FVF9BRE1JTiBDQVBfTkVUX0JJTkRfU0VSVklDRQpOb05ld1ByaXZpbGVnZXM9dHJ1ZQpFeGVjU3RhcnQ9L2V0Yy9zbG93ZG5zL2Ruc3R0LWNsaWVudCAtdWRwIDguOC44Ljg6NTMgLS1wdWJrZXktZmlsZSAvZXRjL3Nsb3dkbnMvc2VydmVyLnB1YiAkbmFtZXNlcnZlciAxMjcuMC4wLjE6MTEwClJlc3RhcnQ9b24tZmFpbHVyZQoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CkVORAoKY2QKI2luc3RhbGwgc2VydmVyLnNlcnZpY2UKY2F0ID4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS9zZXJ2ZXIuc2VydmljZSA8PCBFTkQKW1VuaXRdCkRlc2NyaXB0aW9uPVNlcnZlciBTbG93RE5TIEJ5IEhpZGVTU0gKRG9jdW1lbnRhdGlvbj1odHRwczovL2hpZGVzc2guY29tCkFmdGVyPW5ldHdvcmsudGFyZ2V0IG5zcy1sb29rdXAudGFyZ2V0CgpbU2VydmljZV0KVHlwZT1zaW1wbGUKVXNlcj1yb290CkNhcGFiaWxpdHlCb3VuZGluZ1NldD1DQVBfTkVUX0FETUlOIENBUF9ORVRfQklORF9TRVJWSUNFCkFtYmllbnRDYXBhYmlsaXRpZXM9Q0FQX05FVF9BRE1JTiBDQVBfTkVUX0JJTkRfU0VSVklDRQpOb05ld1ByaXZpbGVnZXM9dHJ1ZQpFeGVjU3RhcnQ9L2V0Yy9zbG93ZG5zL2Ruc3R0LXNlcnZlciAtdWRwIDo1MzAwIC1wcml2a2V5LWZpbGUgL2V0Yy9zbG93ZG5zL3NlcnZlci5rZXkgJG5hbWVzZXJ2ZXIgMTI3LjAuMC4xOjY5ClJlc3RhcnQ9b24tZmFpbHVyZQoKW0luc3RhbGxdCldhbnRlZEJ5PW11bHRpLXVzZXIudGFyZ2V0CkVORAoKI3Blcm1pc3Npb24gc2VydmljZSBzbG93ZG5zCmNkCmNobW9kICt4IC9ldGMvc3lzdGVtZC9zeXN0ZW0vY2xpZW50LnNlcnZpY2UKY2htb2QgK3ggL2V0Yy9zeXN0ZW1kL3N5c3RlbS9zZXJ2ZXIuc2VydmljZQpwa2lsbCBkbnN0dC1zZXJ2ZXIKcGtpbGwgZG5zdHQtY2xpZW50CgpjbGVhcgplY2hvICJcZVsxOzMybSBHZW5lcmFuZG8gbnVldmEgY2xhdmUiCmNkIC9ldGMvc2xvd2RucwpybSBzZXJ2ZXIua2V5IHNlcnZlci5wdWIKLi9kbnN0dC1zZXJ2ZXIgLWdlbi1rZXkgLXByaXZrZXktZmlsZSBzZXJ2ZXIua2V5IC1wdWJrZXktZmlsZSBzZXJ2ZXIucHViCmVjaG8gLWUgIiBcZVsxOzMybUZJTkFMSVpBTkRPLi4uIgouL3N0YXJ0ZG5zCgpzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZApzeXN0ZW1jdGwgc3RvcCBjbGllbnQKc3lzdGVtY3RsIHN0b3Agc2VydmVyCgpzeXN0ZW1jdGwgZW5hYmxlIGNsaWVudApzeXN0ZW1jdGwgZW5hYmxlIHNlcnZlcgoKc3lzdGVtY3RsIHN0YXJ0IGNsaWVudApzeXN0ZW1jdGwgc3RhcnQgc2VydmVyCgpzeXN0ZW1jdGwgcmVzdGFydCBjbGllbnQKc3lzdGVtY3RsIHJlc3RhcnQgc2VydmVyCgpjbGVhcgpmaQppZiBbWyAkc2xvdyA9PSAiMiIgXV07IHRoZW4KI2luc3RhbGwgc2xvd2Rucwp3Z2V0ICR7UkVQT31zbG93ZG5zL2luc3RhbGxzbDIuc2ggJiYgY2htb2QgK3ggaW5zdGFsbHNsMi5zaCAmJiBiYXNoIC4vaW5zdGFsbHNsMi5zaApybSAtZiAvcm9vdC9pbnN0YWxsc2wyLnNoCmNsZWFyCmZpCmlmIFtbICRzbG93ID09ICIzIiBdXTsgdGhlbgojaW5zdGFsbCBzbG93ZG5zCndnZXQgJHtSRVBPfXNsb3dkbnMvc2xvd2Rucy5zaCAmJiBjaG1vZCAreCBzbG93ZG5zLnNoICYmIGJhc2ggLi9zbG93ZG5zLnNoCnJtIC1mIC9yb290L3Nsb3dkbnMuc2gKY2xlYXIKZmkKfQpzbG93c2JnCmV4aXQK
B14CK-KN1GH7
source ${NFS}
rm -rf ${NFS}