#!/bin/bash
clear

PUB=$(cat /etc/slowdns/server.pub)
NS=$(cat /etc/xray/dns)
CITY=$(cat /etc/xray/city)
clear

yellow="\033[0;33m"
ungu="\033[0;35m"
Red="\033[91;1m"
Cyan="\033[96;1m"
Xark="\033[0m"
BlueCyan="\033[5;36m"
WhiteBe="\033[5;37m"
GreenBe="\033[5;32m"
YellowBe="\033[5;33m"
BlueBe="\033[5;34m"
# . Liner 
function baris_panjang() {
  echo -e "${BlueCyan} ———————————————————————————————————————————————${Xark}"
}
function Lunatic_Banner() {
clear
baris_panjang
echo -e       "${ungu}                  MOD´s By JERRY-SBG              ${Xark}"
baris_panjang
}

function Sc_Credit(){
sleep 1
baris_panjang
echo -e       "${ungu}          Gracias por usar-       ${Xark}"
echo -e       "${ungu}         MOD´s By JERRY-SBG       ${Xark}"
baris_panjang
exit 1
}

duration=6
frames=("██10%" "█████35%" "█████████65%" "█████████████80%" "█████████████████████90%" "█████████████████████████100%")

# Menghitung jumlah frame
num_frames=${#frames[@]}

# Menghitung jumlah iterasi
num_iterations=$((duration))

# Fungsi untuk menampilkan animasi loading berwarna

Loading_Animasi() {
    for ((i = 0; i < num_iterations; i++)); do
        clear
        index=$((i % num_frames))
        color_code=$((31 + i % 7))
echo ""
echo ""
echo ""
echo -e "\e[1;${color_code}m ${frames[$index]}\e[0m"
sleep 0.5
    done
}

# Menampilkan pesan Sukses setelah animasi selesai
function Loading_Succes() {
clear
echo -e  "\033[5;32mExito\033[0m"
sleep 1
clear
}



NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/xray/config.json")
        if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
    Lunatic_Banner
    baris_panjang
    echo -e "${Red} Lo Siento ${Xark} "
    echo ""
    echo "No tienes clientes existentes!"
    echo ""
    baris_panjang
    Sc_Credit
    read -n 1 -s -r -p "Presione [ Enter ] para regresar al MENU vmess"
    m-vmess
fi

  baris_panjang
  echo -e "  \e[1;97;101m        CONFIG VMESS ACCOUNT         \E[0m"
  baris_panjang
        echo -e "${yellow}     No |  Usuario  |   Expiracion  ${Xark} "
        grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 2-3 | nl -s ') '
        until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
                if [[ ${CLIENT_NUMBER} == '1' ]]; then
                        read -rp "Seleccione un cliente [1]: " CLIENT_NUMBER
                else
baris_panjang
baris_panjang
                        read -rp "Seleccione un cliente [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
                        Loading_Animasi
                fi
        done
user=$(grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
domain=$(cat /etc/xray/domain)
iplim=$(cat /etc/kyt/limit/vmess/ip/$user)
Quota=$(cat /etc/vmess/$user)
uuid=$(grep -E "^### " "/etc/vmess/.vmess.db" | cut -d ' ' -f 4 | sed -n "${CLIENT_NUMBER}"p)
#Quota=$(grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 5 | sed -n "${CLIENT_NUMBER}"p)
exp=$(grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 3 | sed -n "${CLIENT_NUMBER}"p)
hariini=`date -d "0 days" +"%Y-%m-%d"`
asu=`cat<<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${domain}",
      "port": "443",
      "id": "${uuid}",
      "aid": "0",
      "net": "ws",
      "path": "/vmess",
      "type": "none",
      "host": "${domain}",
      "tls": "tls"
}
EOF`
ask=`cat<<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${domain}",
      "port": "80",
      "id": "${uuid}",
      "aid": "0",
      "net": "ws",
      "path": "/vmess",
      "type": "none",
      "host": "${domain}",
      "tls": "none"
}
EOF`
grpc=`cat<<EOF
      {
      "v": "2",
      "ps": "${user}",
      "add": "${domain}",
      "port": "443",
      "id": "${uuid}",
      "aid": "0",
      "net": "grpc",
      "path": "vmess-grpc",
      "type": "none",
      "host": "${domain}",
      "tls": "tls"
}
EOF`
cat >/var/www/html/vmess-$user.txt <<-END

◇━━━━━━━━━━━━━━━━━◇
 SBG-VPS By JERRY 
◇━━━━━━━━━━━━━━━━━◇
# Format Vmess WS TLS

- name: Vmess-$user-WS TLS
  type: vmess
  server: ${domain}
  port: 443
  uuid: ${uuid}
  alterId: 0
  cipher: auto
  udp: true
  tls: true
  skip-cert-verify: true
  servername: ${domain}
  network: ws
  ws-opts:
    path: /vmess
    headers:
      Host: ${domain}

# Format Vmess WS Non TLS

- name: Vmess-$user-WS Non TLS
  type: vmess
  server: ${domain}
  port: 80
  uuid: ${uuid}
  alterId: 0
  cipher: auto
  udp: true
  tls: false
  skip-cert-verify: false
  servername: ${domain}
  network: ws
  ws-opts:
    path: /vmess
    headers:
      Host: ${domain}

# Format Vmess gRPC

- name: Vmess-$user-gRPC (SNI)
  server: ${domain}
  port: 443
  type: vmess
  uuid: ${uuid}
  alterId: 0
  cipher: auto
  network: grpc
  tls: true
  servername: ${domain}
  skip-cert-verify: true
  grpc-opts:
    grpc-service-name: vmess-grpc

◇━━━━━━━━━━━━━━━━━◇
 Link Akun Vmess                   
◇━━━━━━━━━━━━━━━━━◇
Link TLS         : 
${vmesslink1}
◇━━━━━━━━━━━━━━━━━◇
Link none TLS    : 
${vmesslink2}
◇━━━━━━━━━━━━━━━━━◇
Link GRPC        : 
${vmesslink3}
◇━━━━━━━━━━━━━━━━━◇

END
vmesslink1="vmess://$(echo $asu | base64 -w 0)"
vmesslink2="vmess://$(echo $ask | base64 -w 0)"
vmesslink3="vmess://$(echo $grpc | base64 -w 0)"

clear
CHATID="$CHATID"
KEY="$KEY"
TIME="$TIME"
URL="$URL"
TEXT="<code>◇━━━━━━━━━━━━━━━━━◇</code>
<code>VMESS ACCOUNT</code>
<code>◇━━━━━━━━━━━━━━━━━◇</code>
<code>Remarks     : ${user}</code>
Dominio     : ${domain}
User Cuota  : ${Quota} GB
Limit Ip    : ${iplimit} IP
port TLS    : 443
Port NTLS   : 80
User ID     : ${uuid}
Encryption  : none
Path TLS    : /Multi-Path
ServiceName : vmess-grpc
<code>◇━━━━━━━━━━━━━━━━━◇</code>
<code>Link TLS    : ${vlesslink1}</code>
<code>◇━━━━━━━━━━━━━━━━━◇</code>
<code>Link NTLS   : ${vlesslink2}</code>
<code>◇━━━━━━━━━━━━━━━━━◇</code>
<code>Link GRPC   : ${vlesslink3}</code>
<code>◇━━━━━━━━━━━━━━━━━◇</code>
Format OpenClash : https://${domain}:81/vless-$user.txt
<code>◇━━━━━━━━━━━━━━━━━◇</code>
Creado el        : $tnggl
Termina en       : $expe
<code>◇━━━━━━━━━━━━━━━━━◇</code>
"


curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
clear
echo -e ""

function Details_Account() {
echo -e " VMESS "
echo -e ""
echo -e "Usuario      : ${user}"
echo -e "Domain       : ${domain}"
echo -e "User Cuota   : ${Quota} GB"
echo -e "User Ip      : ${iplimit} IP"
echo -e "Port TLS     : 443"
echo -e "Port  WS     : 80"
echo -e "id           : ${uuid}"
echo -e "alterId      : 0"
echo -e "Security     : auto"
echo -e "Network      : ws"
echo -e "Path         : /Multi-Path"
echo -e "Dynamic      : https://bugmu.com/path"
echo -e "ServiceName  : vmess-grpc"

}
function Link_Json() {
baris_panjang
echo -e " Link TLS   : ${vmesslink1}"
baris_panjang
echo -e " Link  WS   : ${vmesslink2}"
baris_panjang
echo -e " Link GRPC  : ${vmesslink3}"
baris_panjang
echo -e " OpenClash  : https://${domain}:81/vmess-$user.txt"
baris_panjang

}

function Details_Expiry() {
echo -e "${yellow}                Expiracion : $masaaktif Dias ${Days} "

}
echo ""

Kanaeru_Banner
Details_Account
Link_Json
Details_Expiry
Sc_Credit
read -n 1 -s -r -p "Presione cualquier tecla para regresar al MENU"
m-vmess