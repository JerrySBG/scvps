#!/bin/bash
# COLOR VALIDATION
clear
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
LIGHT='\033[0;37m'
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%I:%M %p)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
clear
#IZIN SCRIPT
MYIP=$(curl -sS ipv4.icanhazip.com)
echo -e "\e[32mCargando...\e[0m"
clear
# Valid Script
ipsaya=$(wget -qO- ipinfo.io/ip)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="https://raw.githubusercontent.com/JerrySBG/SBG/main/ip"
checking_sc() {
  useexp=$(wget -qO- $data_ip | grep $ipsaya | awk '{print $3}')
  if [[ $date_list < $useexp ]]; then
    echo -ne
  else
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 AUTOSCRIPT NO ENCONTRADO      \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "              ${RED}PERMISO DENEGADO !${NC}"
    echo -e "     \033[0;33mTU VPS${NC} $ipsaya \033[0;33mHA SIDO BANEADA${NC}"
    echo -e " \033[0;33mComprar permisos de Acceso para el Scripts${NC}"
    echo -e "           \033[0;33mContacto del Admin :${NC}"
    echo -e "         ${Lgreen}Telegram${NC} t.me/Jerry_SGB"
    echo -e "      ${GREEN}WhatsApp${NC} wa.me/+529241293310"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    exit
  fi
}
checking_sc
Isadmin=$(curl -sS https://raw.githubusercontent.com/JerrySBG/SBG/main/ip | grep $MYIP | awk '{print $4}')
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# USERNAME
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/JerrySBG/SBG/main/ip | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/JerrySBG/SBG/main/ip | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expira En   : $(( (d1 - d2) / 86400 )) Dias"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | Geo Project
Info="(${CYAN}ACTIVO${LIGHT})"
Error="(${RED}EXPIRADO${LIGHT})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS https://raw.githubusercontent.com/JerrySBG/SBG/main/ip | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
echo -e "\e[32mCargando...\e[0m"
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project
clear
# STATUS SERVICE  SSH
if [[ $ssh_service == "running" ]]; then
   status_ssh="${green}🟢${NC}"
else
   status_ssh="${z}🔴${NC} "
fi

# STATUS SERVICE  SSH
if [[ $ssh_service == "running" ]]; then
   ssh_service="${green}🟢${NC}"
else
   ssh_service="${z}🔴${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}🟢${NC}"
else
    status_ws_epro="${z}🔴${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then
   status_haproxy="${green}🟢${NC}"
else
   status_haproxy="${z}🔴${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then
   status_xray="${green}🟢${NC}"
else
   status_xray="${z}🔴${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then
   status_nginx="${green}🟢${NC}"
else
   status_nginx="${z}🔴${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then
   status_dropbear="${green}🟢${NC}"
else
   status_dropbear="${z}🔴${NC} "
fi

udp_custom=$( systemctl status udp-custom | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $udp_custom == "running" ]]; then
    status_udp="${green}🟢${NC}"
else
    status_udp="${z}🔴${NC}"
    systemctl start udp-custom
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #BLUE
a=" ${z}CUENTA PREMIUM"
echo -e " "
echo -e " ${RED} ╭══════════════════════════════════════════════════════════╮${RED}"
echo -e " ${RED} │${RED} ${COLBG1}         ${CYAN} • AUTOSCRIPT OPTIMIZADO JERRY-SBG •           ${RED} $RED│ $RED"
echo -e " ${RED} ╰══════════════════════════════════════════════════════════╯${RED}"
echo -e " ${RED} ╭══════════════════════════════════════════════════════════╮${RED}"
echo -e " ${RED} │$RED${LIGHT} ❈ S.O     ${RED}: ${LIGHT}$MODEL${RED}                           ${RED}│"      
echo -e " ${RED} │$RED${LIGHT} ❈ RAM     ${RED}: ${LIGHT}$uram MB / $tram MB${RED}                             ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ FECHA   ${RED}: ${LIGHT}$DATEVPS${RED}                                   ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ ACTIVO  ${RED}: ${LIGHT}$SERONLINE$upminutes$uptimecek $RED                            ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ TIME    ${RED}: ${LIGHT}$TIMEZONE $RED                            ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ ISP     ${RED}: ${LIGHT}$ISP $RED                          ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ City    ${RED}: ${LIGHT}$CITY $RED                                   ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ IP VPS  ${RED}: ${LIGHT}$IPVPS $RED                       ${RED}│"
echo -e " ${RED} │$RED${LIGHT} ❈ DOMINIO ${RED}: ${LIGHT}$domain $RED                     ${RED}│"
#echo -e " $RED│$RED${LIGHT} ❈ NSDomain      ${RED}: ${LIGHT}$(cat /etc/xray/dns)${RED}                     ${RED}│"
echo -e " ${RED} ╰══════════════════════════════════════════════════════════╯${RED}"
echo -e "      ${RED}╭═════════════════ • ${RED}${LIGHT}STATUS SERVER${RED}${RED} • ═══════════════╮${RED}"
echo -e "         ${LIGHT} SSH : ${status_ssh}   ${LIGHT} WS : ${status_ws_epro} ${LIGHT} XRAY : ${status_xray} ${LIGHT} DROPBEAR : ${status_dropbear}$RED"
echo -e "                ${LIGHT} NGINX : ${status_nginx} ${LIGHT} UDP : ${status_udp} ${LIGHT} PROXY : ${status_haproxy} ${RED}"
echo -e "      ${RED}╰═══════════════════════════════════════════════════╯${RED}"
#echo -e "        ${RED}╭════════════════════════════════════════════╮${RED}"
#echo -e "                   $RED$RED${LIGHT}   LISTA USUARIOS PREMIUM ${RED}"
#echo -e "          ${RED}      ═════════════════════════════════ ${RED}"
#echo -e "             ${YELL} SSH/OPENVPN/UDP  $YELL:$NC $ssh1  ${YELL}$a"
#echo -e "             ${YELL} VMESS/WS/GRPC    $YELL:$NC $vma  ${YELL}$a"
#echo -e "             ${YELL} VLESS/WS/GRPC    $YELL:$NC $vla  ${YELL}$a"
#echo -e "             ${YELL} TROJAN/WS/GRPC   $YELL:$NC $trb  ${YELL}$a"
#echo -e "             ${YELL} SHADOW/WS/GRPC   $YELL:$NC $ssa  ${YELL}$a"
#echo -e "        ${RED}╰═════════════════════════════════════════════╯${RED}"
echo -e " ${RED} ╭═══════════════════════ • ${LIGHT}LIST MENU${RED}${RED} • ═══════════════════════╮${RED}"
echo -e " ${RED} │$RED [${BRED}01$RED]${YELL} MENU SSH   $NC[${LIGHT}$ssh1$NC]$RED│ [${BRED}09$RED]${YELL} AUTO REBOOT   $RED│ [${BRED}17$RED]${YELL} RESTART VPS  ${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}02$RED]${YELL} MENU VMESS $NC[${LIGHT}$vma$NC]$RED│ [${BRED}10$RED]${YELL} MENU PORT     $RED│ [${BRED}18$RED]${YELL} SET DOMAIN   ${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}03$RED]${YELL} MENU VLESS $NC[${LIGHT}$vla$NC]$RED│ [${BRED}11$RED]${YELL} SPEEDTEST     $RED│ [${BRED}19$RED]${YELL} CERT SSL     ${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}04$RED]${YELL} MENU TROJAN$NC[${LIGHT}$trb$NC]$RED│ [${BRED}12$RED]${YELL} RUNNING CHEK  $RED│ [${BRED}20$RED]${YELL} INSTALL UDP  ${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}05$RED]${YELL} MENU SHADOW$NC[${LIGHT}$ssa$NC]$RED│ [${BRED}13$RED]${YELL} CLEAR LOG     $RED│ [${BRED}21$RED]${YELL} CLEAR CACHE  ${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}06$RED]${YELL} LIMIT SPEED   $RED│ [${BRED}14$RED]${YELL} CHEK BANDWITH $RED│ [${BRED}22$RED]${YELL} BOT NOTIF    ${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}07$RED]${YELL} CHECK RAM/CPU $RED│ [${BRED}15$RED]${YELL} BACKUP/RESTORE$RED│ [${BRED}23$RED]${YELL} UPDATE SCRIPT${RED}│$RED"
echo -e " ${RED} │$RED [${BRED}08$RED]${YELL} BORRAR ALL EXP$RED│ [${BRED}16$RED]${YELL} REBOOT VPS    $RED│ [${BRED}24$RED]${YELL} MENU BOT VIP ${RED}│$RED"
echo -e " ${RED} │                                                             ${RED}│"
echo -e " ${RED} │$RED [${BRED}25$RED]${YELL} CAMBIAR BANNER SSH ${KANAN}                                 ${RED}│"
#echo -e " ${RED} │$RED [${BRED}26$RED]${YELL} MENU ADD IP (RESELLER)                                      ${RED}│"
#echo -e " ${RED} │$RED [${BRED}27$RED]${YELL} PRECIO AUTOSCRIPT${KANAN}                                   ${RED}│"
echo -e " ${RED} │$RED [${BRED}28$RED]${YELL} AUTO-KILL USUARIOS                                     ${RED}│"
echo -e " ${RED} │$RED [${BRED}29$RED]${YELL} MENU OPCIONES EXTRAS                                   ${RED}│"
echo -e " ${RED} ╰═════════════════════════════════════════════════════════════╯${RED}"
echo -e " ${RED} ╭═════════════════════════════════════════════════════════════╮${RED}"
echo -e " ${RED} │$RED ${LIGHT} ❈ Cliente   ${RED}: ${LIGHT}$username $RED                                 ${RED}│"
echo -e " ${RED} │$RED ${LIGHT} ❈ Expiracion${RED}: ${YELL}$exp ${RED}                                  ${RED}│"
echo -e " ${RED} │$RED ${LIGHT} ❈ Estado   ${RED} : ${LIGHT}$sts ${RED}                                    ${RED}│"
echo -e " ${RED} │$RED ${LIGHT} ❈ Telegram  ${RED}:$LIGHT t.me/Jerry_SBG                               ${RED}│" 
echo -e " ${RED} │$RED ${LIGHT} ❈ Creador   ${RED}:$CYAN JERRY SAENZ                                  ${RED}│"
echo -e " ${RED} ╰═════════════════════════════════════════════════════════════╯${RED}"
echo -e ""
read -p "  Seleccionar entre opciones [ 1-28 ] »» " opt
echo -e ""
case $opt in
1 | 01) clear ; m-sshws ;;
2 | 02) clear ; m-vmess ;;
3 | 03) clear ; m-vless ;;
4 | 04) clear ; m-trojan ;;
5 | 05) clear ; m-ssws ;;
6 | 06) clear ; limitspeed ;;
7 | 07)
clear
gotop
echo ""
echo -e " ${GREEN} Volver al menú en 1 segundos ${NC}"
sleep 1
menu
;;
8 | 08)
clear
xp
echo ""
echo -e " ${GREEN} Volver al menú en 1 segundos ${NC}"
sleep 1
menu
;;
9 | 09) clear ; autoreboot ;;
10)
clear
prot
echo ""
read -n 1 -s -r -p "Presione cualquier tecla para regresar al MENU"
menu
;;
11)
clear
speedtest
echo ""
read -n 1 -s -r -p "Presione cualquier tecla para regresar al MENU"
menu
;;
12) clear ; run ;;
13) clear ; clearlog ;;
14) clear ; bw ;;
15) clear ; menu-backup ;;
16) clear ; reboot ;;
17) clear ; restart ;;
18) clear ; addhost ;;
19) clear ; fixcert ;;
20)
clear
wget -q https://raw.githubusercontent.com/JerrySBG/SBG/main/limit/udp-costum.sh ; bash udp-costum.sh
;;
21) clear ; clearcache ;;
22) clear ; bot ;;
23)
clear
wget https://raw.githubusercontent.com/JerrySBG/SBG/main/update.sh && chmod +x update.sh && ./update.sh
;;
24) clear ; add-bot-panel ;;
25)
clear
nano /etc/kyt.txt
;;
#26) clear ; $ressee ;;
#26) clear ; add-ip ;;
#27) clear ; sc ;;
28) clear ; autokill ;;
29) clear ; utility ;;
0 | 00)
figlet ALATHACLOUD
exit
;;
x)
menu
;;
*)
echo -e ""
menu
;;
esac
